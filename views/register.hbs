<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Register</title>
  <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
  <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap'>

  <style>
    * {
      font-family: "Poppins", sans-serif;
      box-sizing: border-box;
    }

    body {
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-image: url('html/GeneralIMG/StandardBG.png');
      background-size: cover;
      background-repeat: no-repeat;
      background-attachment: fixed;
      background-position: center;
    }

    .screen-1 {
      width: 90%;
      max-width: 500px;
      background: #f1f7fe;
      padding: 2em;
      border-radius: 30px;
      box-shadow: 0 0 2em #e6e9f9;
    }

    .logo {
      display: block;
      margin: 0 auto 1em;
      width: 100%;
      max-width: 150px;
    }

    label {
      font-weight: 600;
      color: #4d4d4d;
    }

    input, select {
      width: 100%;
      padding: 0.5em;
      border: 1px solid #ddd;
      border-radius: 5px;
      margin-top: 0.5em;
      font-size: 1em;
    }

    .login {
      width: 100%;
      padding: 0.75em;
      background: #006937;
      color: white;
      border: none;
      border-radius: 30px;
      font-weight: 600;
      cursor: pointer;
      margin-top: 1em;
    }

    .error {
      color: red;
      font-size: 0.875em;
      margin-top: 0.25em;
    }

    .rule-item {
      list-style: none;
      margin: 6px 0;
      padding-left: 1.75em;
      position: relative;
      color: #555;
      font-size: 0.9em;
    }

    .rule-item::before {
      content: "❌";
      position: absolute;
      left: 0;
      color: red;
    }

    .rule-item.valid {
      color: #006937;
    }

    .rule-item.valid::before {
      content: "✅";
      color: #006937;
    }

    .container h1 {
      font-size: 1.2em;
      color: #000;
      margin-bottom: 0.5em;
      text-align: left;
    }

    .container label {
      display: block;
      margin: 0.5em 0;
    }

    .container span {
      display: block;
      width: 100%;
      padding: 0.75em;
      border-radius: 20px;
      text-align: center;
      font-weight: 600;
      color: #006937;
      background-color: transparent;
      transition: background-color 0.3s, color 0.3s;
    }

    .container input[type="radio"] {
      display: none;
    }

    .container input[type="radio"]:checked + span {
      background-color: #6db282;
      color: white;
    }

    dialog {
      padding: 2em;
      border: none;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
      font-family: "Poppins", sans-serif;
      text-align: center;
      max-width: 300px;
    }

    dialog::backdrop {
      background: rgba(0, 0, 0, 0.4);
    }

    .bdialog {
      margin-top: 1em;
      padding: 0.5em 1.2em;
      border: none;
      border-radius: 20px;
      background-color: #006937;
      color: white;
      font-weight: 600;
      cursor: pointer;
    }
    .footer {
      text-align: center;
      font-size: 0.8em;
      color: #5e5e5e;
      margin-top: 1em;
    }
    .footer a {
      text-decoration: none;
      color: #5e5e5e;
    }

    .password-container {
      position: relative;
      display: flex;
      align-items: center;
    }

    .password-container input {
      width: 100%;
      padding-right: 2.5em;
    }

    .toggle-password {
      position: absolute;
      right: 0.75em;
      cursor: pointer;
      color: #666;
      font-size: 1.2em;
    }

    .error-message {
      color: red;
      font-size: 0.9em;
      margin-top: 4px;
      display: none;
    }


  </style>
</head>
<body>
  <div class="screen-1">
    <img class="logo" src="html/GeneralIMG/Logo.png" alt="Logo">
    <form id="registerForm">
      <label for="email">Email Address</label>
      <input type="email" id="email" name="email" placeholder="username@dlsu.edu.ph" required />
      <div id="email-error" class="error" style="display: none;">Must use a DLSU email.</div>
      <div id="email-exists-error" class="error" style="display: none;">Email already registered.</div>

      <label for="password">Password</label>
      <div class="password-container">
        <input id="password" type="password" name="password" required />
        <ion-icon class="toggle-password" name="eye-off-outline" onclick="togglePassword('password', this)"></ion-icon>
      </div>


      <ul id="password-rules">
        <li id="rule-length" class="rule-item">At least 8 characters</li>
        <li id="rule-uppercase" class="rule-item">At least one uppercase letter</li>
        <li id="rule-lowercase" class="rule-item">At least one lowercase letter</li>
        <li id="rule-number" class="rule-item">At least one number (0–9)</li>
        <li id="rule-special" class="rule-item">At least one special character (!@#$%^&*)</li>
      </ul>

      <label for="confirmPassword">Confirm Password</label>
      <div class="password-container">
        <input id="confirmPassword" type="password" name="confirmPassword" required />
        <ion-icon class="toggle-password" name="eye-off-outline" onclick="togglePassword('confirmPassword', this)"></ion-icon>
      </div>
      <p id="passwordMismatchError" class="error-message">Passwords do not match.</p>

      <label for="securityQuestion"><br>Security Question</label>
      <select id="securityQuestion" name="securityQuestion" required>
        <option value="" disabled selected>Select a question</option>
        <option value="pet">What is the name of your first pet?</option>
        <option value="school">What was the name of your elementary school?</option>
        <option value="city">In what city were you born?</option>
        <option value="nickname">What is your childhood nickname?</option>
        <option value="food">What is your favorite food?</option>
      </select>

      <label for="securityAnswer">Answer</label>
      <input type="text" id="securityAnswer" name="securityAnswer" required />

      <div class="container">
        <h1>Register as:</h1>
        <label>
          <input type="radio" name="isTechnician" value="false" checked>
          <span>Student</span>
        </label>
        <label>
          <input type="radio" name="isTechnician" value="true">
          <span>Technician</span>
        </label>
      </div>

      <button type="submit" class="login" id="registerButton" disabled>Register</button>
       <div class="footer" style="text-align: center; margin-top: 1em;">
  Have an account already?
  <a href="/login" style="font-weight: bold; text-decoration: none; color: #004d40;">Log in</a>
</div>

    </form>
  </div>

  <dialog id="success-dialog">
    <h2>Registered Successfully</h2>
    <button class="bdialog">Close</button>
  </dialog>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const emailInput = document.getElementById('email');
      const emailError = document.getElementById('email-error');
      const emailExistsError = document.getElementById('email-exists-error');
      const passwordInput = document.getElementById('password');
      const confirmPasswordInput = document.getElementById('confirmPassword');
      const passwordError = document.getElementById('password-error');
      const registerButton = document.getElementById('registerButton');
      const securityQuestion = document.getElementById('securityQuestion');
      const securityAnswer = document.getElementById('securityAnswer');
      const successDialog = document.getElementById('success-dialog');

      function updateRule(id, valid) {
        const el = document.getElementById(id);
        el.classList.toggle('valid', valid);
      }

      function validatePasswordComplexity(password) {
        return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/.test(password);
      }

      function checkFormValidity() {
        const emailVal = emailInput.value.trim().toLowerCase();
        const passwordVal = passwordInput.value;
        const confirmVal = confirmPasswordInput.value;
        const answerVal = securityAnswer.value.trim();

        const allRulesPassed = validatePasswordComplexity(passwordVal);
        const emailOK = emailVal.endsWith('@dlsu.edu.ph');
        const passMatch = passwordVal === confirmVal;
        const questionOK = securityQuestion.value !== '';
        const answerOK = answerVal !== '';
        const emailUnique = emailExistsError.style.display === 'none';

        registerButton.disabled = !(emailOK && passMatch && questionOK && answerOK && allRulesPassed && emailUnique);
      }

      passwordInput.addEventListener('input', () => {
        const val = passwordInput.value;
        updateRule('rule-length', val.length >= 8);
        updateRule('rule-uppercase', /[A-Z]/.test(val));
        updateRule('rule-lowercase', /[a-z]/.test(val));
        updateRule('rule-number', /\d/.test(val));
        updateRule('rule-special', /[!@#$%^&*]/.test(val));
        checkFormValidity();
      });

      [emailInput, confirmPasswordInput, securityQuestion, securityAnswer].forEach(input => {
        input.addEventListener('input', checkFormValidity);
      });

      emailInput.addEventListener('blur', async () => {
        const emailVal = emailInput.value.trim().toLowerCase();
        emailError.style.display = emailVal.endsWith('@dlsu.edu.ph') ? 'none' : 'block';

        if (emailVal.endsWith('@dlsu.edu.ph')) {
          try {
            const res = await fetch('/check-email', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ email: emailVal })
            });
            const data = await res.json();
            emailExistsError.style.display = data.exists ? 'block' : 'none';
            checkFormValidity();
          } catch (e) {
            console.error('Email check failed', e);
          }
        } else {
          emailExistsError.style.display = 'none';
        }
      });

      document.getElementById('registerForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        // Inside your registerForm submit handler
        const emailValue = emailInput.value.trim().toLowerCase();
        const parts = emailValue.split('@')[0].split('_');
        const name = parts.map(p => p.charAt(0).toUpperCase() + p.slice(1)).join(' '); // e.g., "con_serrano" → "Con Serrano"

        const payload = {
          email: emailValue,
          password: passwordInput.value,
          confirmPassword: confirmPasswordInput.value,
          isTechnician: document.querySelector('input[name="isTechnician"]:checked').value,
          securityQuestion: securityQuestion.value,
          securityAnswer: securityAnswer.value.trim(),
          name // ✅ include name here
        };

        if (payload.password !== payload.confirmPassword) {
          passwordError.style.display = 'block';
          return;
        }

        try {
          const res = await fetch('/register', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });

          const data = await res.json();
          if (data.success) {
            successDialog.showModal();
          } else {
            alert(data.message || 'Registration failed.');
          }
        } catch (err) {
          console.error('Registration error', err);
          alert('Something went wrong.');
        }
      });

      // When the "Close" button is clicked, redirect to login
      successDialog.querySelector('.bdialog').addEventListener('click', () => {
        successDialog.close();
        window.location.href = '/login';
      });
    });

    function togglePassword(id, icon) {
      const input = document.getElementById(id);
      if (input.type === "password") {
        input.type = "text";
        icon.name = "eye-outline";
      } else {
        input.type = "password";
        icon.name = "eye-off-outline";
      }
    }

    function validatePasswordMatchOnBlur() {
    const password = document.getElementById('password').value;
    const confirm = document.getElementById('confirmPassword').value;
    const error = document.getElementById('passwordMismatchError');

    if (confirm && password !== confirm) {
      error.style.display = 'block';
    }
  }

    function validatePasswordMatchOnInput() {
      const password = document.getElementById('password').value;
      const confirm = document.getElementById('confirmPassword').value;
      const error = document.getElementById('passwordMismatchError');

      if (password === confirm) {
        error.style.display = 'none';
      }
    }

    document.getElementById('confirmPassword').addEventListener('blur', validatePasswordMatchOnBlur);
    document.getElementById('confirmPassword').addEventListener('input', validatePasswordMatchOnInput);
    document.getElementById('password').addEventListener('input', validatePasswordMatchOnInput);


  </script>
</body>
</html>
