<!DOCTYPE html>
<html lang="en">
<head>
    <title>Edit User Profile</title>
    <style>
        /* Include the styles from your provided HTML */
        /* You can copy the styles directly from your HTML file */
        :root {
            --logo-width: 170px;
            --home-link-font-size: 20px;
        }

        body {
            margin: 0;
            padding: 0;
            background: url('IndexIMG/IndexBG.png') center/cover no-repeat;
            font-family: 'Poppins', sans-serif;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            text-align: center;
            position: relative;
        }

        .top-center-logo {
            position: absolute;
            top: 50px;
            left: 50%;
            transform: translateX(-50%);
            width: var(--logo-width);
            height: auto;
        }

        a {
            position: absolute;
            font-size: var(--home-link-font-size);
            color: white;
            text-decoration: none;
        }

        .home-link {
            top: 70px;
            left: 109px;
            font-weight: bold;
        }

        .about-link, .service-link {
            top: 70px;
        }

        .user-profile-bar {
            position: absolute;
            top: 130px;
            left: 0; /* Stick to the left side */
            width: 96.1%; /* Full width */
            height: 60px;
            background: #05321d;
            color: white;
            display: flex;
            align-items: center;
            padding-left: 65px; /* Indent for the text */
            font-size: 30px; 
        }

        .button-section {
            position: absolute;
            top: 210px;
            left: 20px;
            background: #478159;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            height: calc(100% - 300px);
        }
       
        .button-container {
            display: flex;
            flex-direction: column;
            gap: 10px;
            height: 100%;
        }

        .button-container button {
            background: rgba(0, 54, 0, 0.8);
            color: white;
            border: none;
            padding: 15px 20px;
            font-size: 20px;
            cursor: pointer;
            border-radius: 5px;
            transition: background 0.3s ease;
        }

        .button-container button:hover {
            background: rgba(115, 227, 107, 0.8);
        }

        .user-edit-container {
            position: absolute;
            top: 210px;
            right: 20px;
            padding: 20px;
            border-radius: 10px;
            height: calc(100% - 300px);
            width: calc(100% - 370px);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .form-container {
            background-color: rgba(0, 0, 0, 0.8);
            padding: 20px;
            border-radius: 10px;
            width: 100%;
            max-width: 600px;
            text-align: left;
            position: absolute;
            left: 27%;
            font-size: 20px;
        }

        form {
            width: 100%;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            color: white;
        }

        form input[type="text"],
        form input[type="file"],
        form textarea {
            width: calc(100% - 16px);
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        form textarea {
            height: 150px; /* Set fixed height for the description textarea */
        }

        form input[type="submit"] {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background: rgba(115, 227, 107, 0.8);
            color: white;
            cursor: pointer;
            transition: background 0.3s ease;
            margin-top: 10px;
        }

        form input[type="submit"]:hover {
            background: rgba(115, 227, 107, 1);
        }

        .bdialog {
            padding: 1em;
            background: #006937;
            color: white;
            border: none;
            border-radius: 30px;
            font-weight: 600;
            padding: 20px;
            margin-right: 15px;
        }

        .bdialogred {
            padding: 1em;
            background: red;
            color: white;
            border: none;
            border-radius: 30px;
            font-weight: 600;
            padding: 20px;
            margin-right: 15px;
        }

        .center {
            display: flex;
            justify-content: center;
        }

        .bdialog:hover {
            transform: scale(1.08);
            cursor: pointer;
            color: black;
        }

        .bdialogred:hover {
            transform: scale(1.08);
            cursor: pointer;
            color: black;
        }

        .logo {
            position: absolute;
            top: 40px; /* Adjusted distance from the top */
            left: 50%;
            transform: translateX(-50%);
        }

        .logo img {
            width: var(--logo-width);
            height: auto;
        }
        .rule-item {
      list-style: none;
      position: relative;
      padding-left: 1.75em;
      font-size: 0.9em;
      color: #555;
      text-align: left;
      line-height: 1.4;
    }

    .rule-item::before {
      content: "❌";
      position: absolute;
      left: 0;
      top: 0.05em;
      color: red;
    }

    .rule-item.valid {
      color: #006937;
    }

    .rule-item.valid::before {
      content: "✅";
      color: #006937;
    }

    .error {
      color: red;
      font-size: 0.9em;
      margin-top: 0.25em;
      display: none;
    }

    .close-btn {
      position: absolute;
      right: 20px;
      top: 10px;
      font-size: 20px;
      font-weight: bold;
      color: red;
      cursor: pointer;
    }
    </style>
</head>
<body style="background: url('html/GeneralIMG/StandardBG.png') center/cover no-repeat fixed;">

<div class="logo">
    <img src="html/IndexIMG/Logo.png" alt="LabSpot Logo">
</div>

<a href="#" class="home-link" id="home-link">Home</a>

<div class="user-profile-bar">Edit Profile</div>

<div class="button-section">
    <div class="button-container">
        <button onclick="window.location.href='/userprofile'">User Profile</button>
        <button onclick="window.location.href='/reservation'">Edit/See Reservations</button>
        <button onclick="document.getElementById('changePasswordDialog').showModal()">Change Password</button>
    </div>
</div>

<div class="user-edit-container">
    <div class="form-container">
        <form action="/update-user" method="post" enctype="multipart/form-data">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" placeholder="{{user.name}}" value="{{user.name}}">

            <label for="college">College:</label>
            <input type="text" id="college" name="college" placeholder="{{user.college}}" value="{{user.college}}">

            <label for="program">Program:</label>
            <input type="text" id="program" name="program" placeholder="{{user.program}}" value="{{user.program}}">

            <label for="description">Description:</label>
            <textarea id="description" name="description" placeholder="{{user.description}}">{{user.description}}</textarea>
            
           <label for="picture">Upload a picture:</label>
                <input
                type="file"
                id="picture"
                name="picture"
                accept=".jpg,.jpeg,.png,image/jpeg,image/png"
                />
            <div id="pictureError" class="error">Only JPG or PNG files are allowed.</div>
            
            <div class="center">
                <button class="bdialog" type="submit">Save</button>
                <button class="bdialogred" type="button" onclick="window.location.href='/userprofile'">Back</button>
            </div>
        </form>
    </div>
</div>

<dialog id="changePasswordDialog">
    <span class="close-btn" onclick="changePasswordDialog.close()">×</span>
    <h3>Change Password</h3>
    <p>Current Password:</p>
    <input type="password" id="currentPass" placeholder="Current Password" />
   

    <p>New Password:</p>
    <input type="password" id="newPass" placeholder="New Password" />
    <ul id="pass-rules">
      <li id="pass-rule-length" class="rule-item">At least 8 characters</li>
      <li id="pass-rule-uppercase" class="rule-item">At least one uppercase letter</li>
      <li id="pass-rule-lowercase" class="rule-item">At least one lowercase letter</li>
      <li id="pass-rule-number" class="rule-item">At least one number (0–9)</li>
      <li id="pass-rule-special" class="rule-item">At least one special character (!@#$%^&*)</li>
    </ul>

    <input type="password" id="confirmNewPass" placeholder="Confirm New Password" />
     <div id="passwordChangeError" class="error" style="display: none;"></div>
    <div id="passMatchError" class="error">Passwords do not match.</div>

    <button id="updatePasswordBtn" disabled>Update</button>
  </dialog>

<script>
        document.addEventListener("DOMContentLoaded", () => {
        const pictureInput = document.getElementById("picture");
        const pictureError = document.getElementById("pictureError");
        const form = document.querySelector("form[action='/update-user']");

        const allowedTypes = ["image/jpeg", "image/png"];
        const allowedExts  = [".jpg", ".jpeg", ".png"];

        function isValid(file) {
            if (!file) return true; // allow empty (no change)
            const nameOk = allowedExts.some(ext => file.name.toLowerCase().endsWith(ext));
            const typeOk = allowedTypes.includes(file.type);
            // accept either a known MIME or a safe extension (covers browsers that mislabel type)
            return nameOk || typeOk;
        }

        function showError(msg) {
            pictureError.textContent = msg;
            pictureError.style.display = "block";
        }
        function clearError() {
            pictureError.style.display = "none";
        }

        pictureInput.addEventListener("change", () => {
            const f = pictureInput.files[0];
            if (!isValid(f)) {
            showError("Only .jpg or .png files are allowed.");
            pictureInput.value = ""; // clear the invalid file
            } else {
            clearError();
            }
        });

        form.addEventListener("submit", (e) => {
            const f = pictureInput.files[0];
            if (f && !isValid(f)) {
            e.preventDefault();
            showError("Only .jpg or .png files are allowed.");
            }
        });
        });
    document.addEventListener("DOMContentLoaded", () => {
    const currentPass = document.getElementById("currentPass");
    const newPass = document.getElementById("newPass");
    const confirmNewPass = document.getElementById("confirmNewPass");
    const updateBtn = document.getElementById("updatePasswordBtn");
    const errorDiv = document.getElementById("passwordChangeError");

    function checkPasswordValid(pass) {
      return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/.test(pass);
    }

    function updatePassRules(pass) {
      document.getElementById("pass-rule-length").classList.toggle("valid", pass.length >= 8);
      document.getElementById("pass-rule-uppercase").classList.toggle("valid", /[A-Z]/.test(pass));
      document.getElementById("pass-rule-lowercase").classList.toggle("valid", /[a-z]/.test(pass));
      document.getElementById("pass-rule-number").classList.toggle("valid", /\d/.test(pass));
      document.getElementById("pass-rule-special").classList.toggle("valid", /[!@#$%^&*]/.test(pass));
    }

    function validateAllInputs() {
      const pass = newPass.value.trim();
      const confirm = confirmNewPass.value.trim();
      const current = currentPass.value.trim();

      const valid = checkPasswordValid(pass);
      const match = pass === confirm;

      updatePassRules(pass);
      document.getElementById("passMatchError").style.display = !match && confirm.length > 0 ? "block" : "none";

      updateBtn.disabled = !(valid && match && current.length > 0);
    }

    [currentPass, newPass, confirmNewPass].forEach(input => {
      input.addEventListener("input", validateAllInputs);
    });

    updateBtn.addEventListener("click", async () => {
      errorDiv.style.display = "none"; // Hide old error

      const res = await fetch("/change-password", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          currentPassword: currentPass.value,
          newPassword: newPass.value
        })
      });

      const data = await res.json();

      if (data.success) {
        alert("Password updated successfully!");
        changePasswordDialog.close();

        // Clear inputs & reset UI state
        currentPass.value = "";
        newPass.value = "";
        confirmNewPass.value = "";
        updateBtn.disabled = true;
        errorDiv.style.display = "none";
        document.getElementById("passMatchError").style.display = "none";
      } else {
        // Show backend error message
        errorDiv.textContent = data.message || "An unexpected error occurred.";
        errorDiv.style.display = "block";
        window.location.href = data.redirect || '/login';
      }
    });
  });
    document.addEventListener('DOMContentLoaded', function() {
        const userType = localStorage.getItem('userType');
        const homeLink = document.getElementById('home-link');

        if (userType === 'technician') {
            homeLink.href = '/technicianmenu';
        } else {
            homeLink.href = '/menu';
        }
    });
</script>

</body>

</html>
