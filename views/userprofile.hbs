<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>LabSpot - User Profile</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap">
  <style>
    :root {
      --logo-width: 170px;
      --home-link-font-size: 20px;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-image: url('/html/GeneralIMG/StandardBG.png');
      background-size: cover;
      background-repeat: no-repeat;
      background-attachment: fixed;
      background-position: center;
      color: white;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .logo {
      position: absolute;
      top: 40px;
      left: 50%;
      transform: translateX(-50%);
    }

    .logo img {
      width: var(--logo-width);
    }

    .home-link {
      position: absolute;
      top: 70px;
      left: 109px;
      font-size: var(--home-link-font-size);
      font-weight: bold;
      color: white;
      cursor: pointer;
    }

    .user-profile-bar {
      position: absolute;
      top: 130px;
      left: 0;
      width: 96.1%;
      height: 60px;
      background: #05321d;
      display: flex;
      align-items: center;
      padding-left: 65px;
      font-size: 30px;
    }

    .button-section {
      position: absolute;
      top: 210px;
      left: 20px;
      background-color: #478159;
      padding: 20px;
      border-radius: 10px;
      height: calc(100% - 300px);
    }

    .button-container {
      display: flex;
      flex-direction: column;
      gap: 10px;
      height: 100%;
    }

    .button-container button {
      background-color: rgba(0, 54, 0, 0.8);
      color: white;
      border: none;
      padding: 15px 20px;
      font-size: 20px;
      cursor: pointer;
      border-radius: 5px;
      transition: background-color 0.3s ease;
    }

    .button-container button:hover {
      background-color: rgba(115, 227, 107, 0.8);
    }

    .container {
      max-width: 10000px;
      margin-top: 150px;
      padding: 20px;
        text-align: left;
  color: white;
    }

    .profile-section {
      margin-top: 50px;
      display: flex;
      justify-content: center;
      opacity: 1;
      transition: opacity 0.5s ease-in-out;
    }

    .box {
      background-color: rgba(0, 0, 0, 0.8);
      border-radius: 15px;
      padding: 40px;
      width: 100%;
      text-align: center;
    }

    .avatar {
      background-size: cover;
      background-position: center;
      border-radius: 50%;
      width: 200px;
      height: 200px;
      margin: 0 auto 20px;
    }

    .profile-details {
      text-align: left;
      color: white;
    }

    .profile-details h2 {
      margin-bottom: 20px;
    }

    .profile-details p {
      margin: 15px 0;
    }

    .profile-details a {
      color: #ea6153;
      text-decoration: none;
    }

    .profile-details a:hover {
      text-decoration: underline;
    }

    dialog {
      border: none;
      border-radius: 20px;
      padding: 2em;
      max-width: 400px;
      width: 90%;
      text-align: center;
      font-family: "Poppins", sans-serif;
    }

    dialog::backdrop {
      background: rgba(0, 0, 0, 0.5);
    }

    .rule-item {
      list-style: none;
      position: relative;
      padding-left: 1.75em;
      font-size: 0.9em;
      color: #555;
      text-align: left;
      line-height: 1.4;
    }

    .rule-item::before {
      content: "❌";
      position: absolute;
      left: 0;
      top: 0.05em;
      color: red;
    }

    .rule-item.valid {
      color: #006937;
    }

    .rule-item.valid::before {
      content: "✅";
      color: #006937;
    }

    .error {
      color: red;
      font-size: 0.9em;
      margin-top: 0.25em;
      display: none;
    }

    .close-btn {
      position: absolute;
      right: 20px;
      top: 10px;
      font-size: 20px;
      font-weight: bold;
      color: red;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <div class="logo">
    <img src="/html/IndexIMG/Logo.png" alt="LabSpot Logo">
  </div>

  <a href="#" class="home-link" id="home-link">Home</a>
  <div class="user-profile-bar">{{#if user.isTechnician}}Technician Profile{{else}}User Profile{{/if}}</div>

  <div class="button-section">
    <div class="button-container">
      <button onclick="window.location.href='/edituserpage'">Edit Profile</button>
      <button onclick="window.location.href='/reservation'">Edit/See Reservations</button>
      <button onclick="document.getElementById('changePasswordDialog').showModal()">Change Password</button>
    </div>
  </div>

  <div class="container">
    <div class="profile-section">
      <div class="box">
        <div class="avatar" style="background-image: url('{{user.image}}');"></div>
        <div class="profile-details">
          <h2>{{user.name}}</h2>
          <p><b>Email:</b> <a href="mailto:{{user.username}}">{{user.username}}</a></p>
          <p><b>College:</b> {{user.college}}</p>
          <p><b>Course Program:</b> {{user.program}}</p>
          <h2>About Me:</h2>
          <p>{{user.description}}</p>
        </div>
      </div>
    </div>
  </div>

<dialog id="changePasswordDialog">
    <span class="close-btn" onclick="changePasswordDialog.close()">×</span>
    <h3>Change Password</h3>
    <p>Current Password:</p>
    <input type="password" id="currentPass" placeholder="Current Password" />
   

    <p>New Password:</p>
    <input type="password" id="newPass" placeholder="New Password" maxlength="128" />
    <ul id="pass-rules">
      <li id="pass-rule-length" class="rule-item">At least 8 characters</li>
      <li id="pass-rule-uppercase" class="rule-item">At least one uppercase letter</li>
      <li id="pass-rule-lowercase" class="rule-item">At least one lowercase letter</li>
      <li id="pass-rule-number" class="rule-item">At least one number (0–9)</li>
      <li id="pass-rule-special" class="rule-item">At least one special character (!@#$%^&*)</li>
    </ul>

    <input type="password" id="confirmNewPass" placeholder="Confirm New Password" />
     <div id="passwordChangeError" class="error" style="display: none;"></div>
    <div id="passMatchError" class="error">Passwords do not match.</div>

    <button id="updatePasswordBtn" disabled>Update</button>
  </dialog>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
    const currentPass = document.getElementById("currentPass");
    const newPass = document.getElementById("newPass");
    const confirmNewPass = document.getElementById("confirmNewPass");
    const updateBtn = document.getElementById("updatePasswordBtn");
    const errorDiv = document.getElementById("passwordChangeError");

    function checkPasswordValid(pass) {
      return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/.test(pass);
    }

    function updatePassRules(pass) {
      document.getElementById("pass-rule-length").classList.toggle("valid", pass.length >= 8);
      document.getElementById("pass-rule-uppercase").classList.toggle("valid", /[A-Z]/.test(pass));
      document.getElementById("pass-rule-lowercase").classList.toggle("valid", /[a-z]/.test(pass));
      document.getElementById("pass-rule-number").classList.toggle("valid", /\d/.test(pass));
      document.getElementById("pass-rule-special").classList.toggle("valid", /[!@#$%^&*]/.test(pass));
    }

    function validateAllInputs() {
      const pass = newPass.value.trim();
      const confirm = confirmNewPass.value.trim();
      const current = currentPass.value.trim();

      const valid = checkPasswordValid(pass);
      const match = pass === confirm;

      updatePassRules(pass);
      document.getElementById("passMatchError").style.display = !match && confirm.length > 0 ? "block" : "none";

      updateBtn.disabled = !(valid && match && current.length > 0);
    }

    [currentPass, newPass, confirmNewPass].forEach(input => {
      input.addEventListener("input", validateAllInputs);
    });

    updateBtn.addEventListener("click", async () => {
      errorDiv.style.display = "none"; // Hide old error

      const res = await fetch("/change-password", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          currentPassword: currentPass.value,
          newPassword: newPass.value
        })
      });

      const data = await res.json();

      if (data.success) {
        alert("Password updated successfully!");
        changePasswordDialog.close();

        // Clear inputs & reset UI state
        currentPass.value = "";
        newPass.value = "";
        confirmNewPass.value = "";
        updateBtn.disabled = true;
        errorDiv.style.display = "none";
        document.getElementById("passMatchError").style.display = "none";
         window.location.href = data.redirect || '/login';
      } else {
        // Show backend error message
        errorDiv.textContent = data.message || "An unexpected error occurred.";
        errorDiv.style.display = "block";
      }
    });
  });

 document.addEventListener('DOMContentLoaded', function() {
            const userType = localStorage.getItem('userType');
            const homeLink = document.getElementById('home-link');
            if (userType === 'technician') {
                homeLink.href = 'technicianmenu';
                const studentNameCells = document.querySelectorAll('.cell[data-title="Student Name"]');
                studentNameCells.forEach(cell => cell.style.display = 'table-cell');
            } else {
                homeLink.href = 'menu';
            }
            })

  </script>
</body>
</html>