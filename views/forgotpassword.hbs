<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Forgot Password</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap">
  <style>
    * {
      font-family: "Poppins", sans-serif;
      box-sizing: border-box;
    }

    body {
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-image: url('html/GeneralIMG/StandardBG.png');
      background-size: cover;
      background-repeat: no-repeat;
      background-attachment: fixed;
      background-position: center;
    }

    .screen-1 {
      width: 90%;
      max-width: 400px;
      background: #f1f7fe;
      padding: 2em;
      border-radius: 30px;
      box-shadow: 0 0 2em #e6e9f9;
      position: relative;
    }

    h2 {
      text-align: center;
      color: #006937;
      margin-bottom: 1.5em;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1em;
    }

    label {
      font-weight: 600;
      color: #4d4d4d;
    }

    input {
      padding: 0.75em;
      border-radius: 8px;
      border: 1px solid #ccc;
      font-size: 1em;
      background-color: #f7faff;
    }

    button {
      padding: 0.75em;
      background-color: #006937;
      color: white;
      border: none;
      border-radius: 30px;
      font-weight: 600;
      font-size: 1em;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #004f2a;
    }

    .error {
      color: red;
      font-size: 0.9em;
      display: none;
    }

    dialog {
      border: none;
      border-radius: 20px;
      padding: 2.5em 2em;
      box-shadow: 0 0 25px rgba(0, 0, 0, 0.2);
      max-width: 400px;
      width: 90%;
      text-align: center;
      font-family: "Poppins", sans-serif;
      background: white;
    }

    dialog::backdrop {
      background: rgba(0, 0, 0, 0.4);
    }

    dialog p {
      font-size: 1.1em;
      margin-bottom: 1.5em;
    }

    dialog input {
      width: 100%;
      padding: 0.75em;
      margin-bottom: 1em;
      font-size: 1em;
      border-radius: 8px;
      border: 1px solid #ccc;
      background-color: #f7faff;
      box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    dialog button {
      padding: 0.7em 2em;
      border: none;
      border-radius: 25px;
      background-color: #006937;
      color: white;
      font-weight: 600;
      cursor: pointer;
      font-size: 1em;
      margin-top: 0.5em;
      transition: background-color 0.3s ease;
    }

    dialog button:hover {
      background-color: #004f2a;
    }

    .close-btn {
      position: absolute;
      right: 20px;
      top: 20px;
      font-weight: bold;
      font-size: 20px;
      color: red;
      cursor: pointer;
    }

    .footer {
      text-align: center;
      font-size: 0.8em;
      color: #5e5e5e;
      margin-top: 1.5em;
    }

    .footer a {
      text-decoration: none;
      color: #006937;
      font-weight: bold;
    }
        .rule-item { list-style: none; position: relative; padding-left: 1.75em; color: #555; font-size: 0.9em; }
    .rule-item::before { content: "❌"; position: absolute; left: 0; color: red; }
    .rule-item.valid { color: #006937; }
    .rule-item.valid::before { content: "✅"; color: #006937; }
  </style>
</head>
<body>
  <div class="screen-1">
    <h2>Forgot Password</h2>
    <form id="emailForm">
      <label>Email:</label>
      <input type="email" id="email" required />
      <button type="submit">Next</button>
      <div id="email-error" class="error">Email does not exist.</div>
    </form>

    <dialog id="securityDialog">
      <span class="close-btn" onclick="closeDialog('securityDialog')">×</span>
      <h3>Security Question</h3>
      <p id="securityQuestionText"></p>
      <input id="securityAnswer" required />
      <button onclick="submitAnswer()">Submit</button>
      <div id="answer-error" class="error">Invalid answer.</div>
    </dialog>

    <dialog id="resetDialog">
      <span class="close-btn" onclick="closeDialog('resetDialog')">×</span>
      <p>New Password:</p>
      <input type="password" id="newPassword" />
      <ul id="password-rules">
        <li id="rule-length" class="rule-item">At least 8 characters</li>
        <li id="rule-uppercase" class="rule-item">At least one uppercase letter</li>
        <li id="rule-lowercase" class="rule-item">At least one lowercase letter</li>
        <li id="rule-number" class="rule-item">At least one number (0–9)</li>
        <li id="rule-special" class="rule-item">At least one special character (!@#$%^&*)</li>
      </ul>
      <input type="password" id="confirmPassword" placeholder="Confirm Password" />
      <button id="resetButton" disabled>Reset</button>
      <div id="password-error" class="error">Passwords do not match.</div>
    </dialog>
  </div>

  <script>
    let userEmail = "";

    const updateRule = (id, valid) => document.getElementById(id).classList.toggle('valid', valid);
    const validatePassword = pass => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/.test(pass);

    document.getElementById("emailForm").addEventListener("submit", async e => {
      e.preventDefault();
      userEmail = document.getElementById("email").value.trim();
      const res = await fetch("/forgot/check-email", { method: "POST", headers: {"Content-Type": "application/json"}, body: JSON.stringify({ email: userEmail }) });
      const data = await res.json();
      document.getElementById("email-error").style.display = data.exists ? "none" : "block";
      if(data.exists){ document.getElementById("securityQuestionText").textContent = data.question; document.getElementById("securityDialog").showModal(); }
    });

    window.submitAnswer = async () => {
      const answer = document.getElementById("securityAnswer").value.trim();
      const res = await fetch("/forgot/check-answer", { method: "POST", headers: {"Content-Type": "application/json"}, body: JSON.stringify({ email: userEmail, answer }) });
      const data = await res.json();
      document.getElementById("answer-error").style.display = data.valid ? "none" : "block";
      if(data.valid){ closeDialog("securityDialog"); document.getElementById("resetDialog").showModal(); }
    };

    ["newPassword", "confirmPassword"].forEach(id => document.getElementById(id).addEventListener("input", () => {
      const pass = document.getElementById("newPassword").value;
      const valid = validatePassword(pass);
      updateRule('rule-length', pass.length >= 8);
      updateRule('rule-uppercase', /[A-Z]/.test(pass));
      updateRule('rule-lowercase', /[a-z]/.test(pass));
      updateRule('rule-number', /\d/.test(pass));
      updateRule('rule-special', /[!@#$%^&*]/.test(pass));
      document.getElementById("resetButton").disabled = !(valid && pass === document.getElementById("confirmPassword").value);
    }));

    document.getElementById("resetButton").addEventListener("click", async () => {
      const pass = document.getElementById("newPassword").value;
      const res = await fetch("/forgot/reset-password", { method: "POST", headers: {"Content-Type": "application/json"}, body: JSON.stringify({ email: userEmail, newPassword: pass }) });
      const data = await res.json();
      if(data.success) location.href = "/login";
      else alert("Error resetting password.");
    });

    window.closeDialog = id => document.getElementById(id).close();
  </script>
</body>
</html>
